#include "mbed.h"
#include "stm32f413h_discovery_ts.h"
#include "stm32f413h_discovery_lcd.h"

TS_StateTypeDef TS_State = { 0 };

void ispisNuleTekst()//unesite koeficijente za nule
{
    BSP_LCD_SetTextColor(6591981);
    BSP_LCD_FillRect(0, 0, BSP_LCD_GetXSize(), 40);
    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
    BSP_LCD_SetBackColor(6591981);
    BSP_LCD_SetFont(&Font16);
    BSP_LCD_DisplayStringAt(0, 8, (uint8_t *)"Unesite koeficijente", LEFT_MODE);
    BSP_LCD_DisplayStringAt(0, 23, (uint8_t *)"za nule: ", LEFT_MODE);

}
void ispisPoloviTekst()//unesite koeficijente za polove
{
    BSP_LCD_SetTextColor(6591981);
    BSP_LCD_FillRect(0, 0, BSP_LCD_GetXSize(), 40);
    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
    BSP_LCD_SetBackColor(6591981);
    BSP_LCD_SetFont(&Font16);
    BSP_LCD_DisplayStringAt(0, 8, (uint8_t *)"Unesite koeficijente", LEFT_MODE);
    BSP_LCD_DisplayStringAt(0, 23, (uint8_t *)"za polove: ", LEFT_MODE);
}
void crtajTastaturu()
{
    BSP_LCD_SetTextColor(LCD_COLOR_GRAY);
    BSP_LCD_FillRect(0,150,BSP_LCD_GetXSize(), 100);
    BSP_LCD_SetFont(&Font16);
    BSP_LCD_SetTextColor(LCD_COLOR_DARKGRAY);
    BSP_LCD_FillRect(5,155,25,25);
    BSP_LCD_DisplayStringAt(11, 158, (uint8_t *)"0", LEFT_MODE);
    BSP_LCD_FillRect(35,155,25,25);
    BSP_LCD_DisplayStringAt(41, 158, (uint8_t *)"1", LEFT_MODE);
    BSP_LCD_FillRect(65,155,25,25);
    BSP_LCD_DisplayStringAt(71, 158, (uint8_t *)"2", LEFT_MODE);
    BSP_LCD_FillRect(95,155,25,25);
    BSP_LCD_DisplayStringAt(101, 158, (uint8_t *)"3", LEFT_MODE);
    BSP_LCD_FillRect(125,155,25,25);
    BSP_LCD_DisplayStringAt(132, 158, (uint8_t *)"4", LEFT_MODE);
    
    BSP_LCD_FillRect(5,185,25,25);
    BSP_LCD_DisplayStringAt(11, 189, (uint8_t *)"5", LEFT_MODE);
    BSP_LCD_FillRect(35,185,25,25);
    BSP_LCD_DisplayStringAt(41, 189, (uint8_t *)"6", LEFT_MODE);
    BSP_LCD_FillRect(65,185,25,25);
    BSP_LCD_DisplayStringAt(71, 189, (uint8_t *)"7", LEFT_MODE);
    BSP_LCD_FillRect(95,185,25,25);
    BSP_LCD_DisplayStringAt(101, 189, (uint8_t *)"8", LEFT_MODE);
    BSP_LCD_FillRect(125,185,25,25);
    BSP_LCD_DisplayStringAt(131, 189, (uint8_t *)"9", LEFT_MODE);
    
    BSP_LCD_FillRect(5,215,25,25);
    BSP_LCD_DisplayStringAt(11,217, (uint8_t *)"-", LEFT_MODE);
    
    BSP_LCD_FillRect(35,215,200,20);
    BSP_LCD_DisplayStringAt(30,217, (uint8_t *)"SPACE", CENTER_MODE);

    BSP_LCD_FillRect(155,155,80,25);
    BSP_LCD_DisplayStringAt(167,160, (uint8_t *)"ENTER", LEFT_MODE);
    BSP_LCD_FillRect(155,185,80,25);
    BSP_LCD_DisplayStringAt(167,190, (uint8_t *)"BRISI", LEFT_MODE);
    
}

int dajCifru(int x1, int y1)
{
    int broj;
    if(x1 >= 5 && x1 <= 30)
    {
        if(y1 >= 155 && y1 <= 180) broj = 0;
        if(y1 >= 185 && y1 <= 210) broj = 5;
    }
    if(x1 >= 35 && x1 <= 60)
    {
        if(y1 >= 155 && y1 <= 180) broj = 1;
        if(y1 >= 185 && y1 <= 210) broj = 6;
    }
    if(x1 >= 65 && x1 <= 90)
    {
        if(y1 >= 155 && y1 <= 180) broj = 2;
        if(y1 >= 185 && y1 <= 210) broj = 7;
    }
    if(x1 >= 95 && x1 <= 120)
    {
        if(y1 >= 155 && y1 <= 180) broj = 3;
        if(y1 >= 185 && y1 <= 210) broj = 8;
    }
    if(x1 >= 125 && x1 <= 150)
    {
        if(y1 >= 155 && y1 <= 180) broj = 4;
        if(y1 >= 185 && y1 <= 210) broj = 9;
    }
    
    return broj;
}

int nizNula[5];
int nizPolova[5];
int brojac = 0, predznak = 1;
int coef;

int main()
{

    BSP_LCD_Init();

    /* inicijalizacija ekrana */
    if (BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize()) == TS_ERROR) {
        printf("BSP_TS_Init error\\n");}

    /* brisi ekran */
    BSP_LCD_Clear(LCD_COLOR_WHITE);

    /* Set Touchscreen Demo1 description */

    ispisNuleTekst();
    crtajTastaturu();
   
    while(1)
    {
        while (brojac < 5)
        {
            BSP_TS_GetState(&TS_State);//vraca poziciju touch screen-a
            if(TS_State.touchDetected)
            {
                uint16_t x1 = TS_State.touchX[0];
                wait_ms(100);
                uint16_t y1 = TS_State.touchY[0];
                //printf("%d\n", y1);
                if(x1 >= 5 && x1 <= 30 && y1 >= 215 && y1 <= 240)
                    predznak = -1;
                else
                {
                    coef = dajCifru(x1, y1);
                    nizNula[brojac] = coef * predznak;
                    predznak = 1;
                    printf("%d\n", nizNula[brojac]);
                    brojac++;
                }
            }
        }
        brojac = 0;
        printf("Ponovo\n");
        wait(1);
    }
}

